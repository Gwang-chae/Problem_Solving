-- 문제 설명
-- https://programmers.co.kr/learn/courses/30/lessons/59043

-- 풀이 1
--  H1의 HOUR 컬럼을 선택, OUTS.COUNT 선택, 만약 값이 NULL이면 0으로 대체
SELECT H1.HOUR, IFNULL(OUTS.COUNT, 0) AS COUNT
-- UNION 함수를 통해 0~23까지의 TABLE 생성
-- UINON은 2개 이상의 쿼리를 결합할 때 사용, 결합시 중복 제거
FROM (SELECT 0 AS HOUR
      UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4
      UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8
      UNION SELECT 9 UNION SELECT 10 UNION SELECT 11 UNION SELECT 12
      UNION SELECT 13 UNION SELECT 14 UNION SELECT 15 UNION SELECT 16
      UNION SELECT 17 UNION SELECT 18 UNION SELECT 19 UNION SELECT 20
      UNION SELECT 21 UNION SELECT 22 UNION SELECT 23) AS H1
-- 위에서 만든 H1 TABLE(1)과 
-- ANIMAL_OUTS TABLE을 HOUR(DATETIME)를 기준으로 그룹지었을 때
-- HOUR(DATETIME)과 HOUR(DATETIME)를 COUNT한 TABLE(2)
-- (1), (2)를 HOUR 컬럼이 같은 걸 기준으로 LEFT JOIN
LEFT JOIN (SELECT HOUR(DATETIME) AS HOUR, COUNT(HOUR(DATETIME)) AS COUNT
           FROM ANIMAL_OUTS
           GROUP BY HOUR) AS OUTS 
ON H1.HOUR = OUTS.HOUR


-- 풀이 2
-- SET으로 HOUR_LIST라는 변수 설정 
SET @HOUR_LIST = -1;
-- HOUR_LIST에 +1씩 해가며 HOUR 컬럼으로 SELECT
-- ANIMAL_OUTS에서 HOUR(DATETIME)과 HOUR_LIST가 같은 수들을 COUNT 컬럼으로 SELECT
SELECT (@HOUR_LIST := @HOUR_LIST +1) AS HOUR, 
       (SELECT COUNT(*) FROM ANIMAL_OUTS WHERE HOUR(DATETIME) = @HOUR_LIST) AS COUNT
FROM ANIMAL_OUTS
-- HOUR_LIST가 23 미만일때까지
-- HOUR_LIST가 22일 때, SELECT 내용에 따라 +1로 23이 됨.
WHERE @HOUR_LIST < 23;